spring.application.name=chat-backend

# 서버 포트 설정 (Render에서는 PORT 환경변수를 사용)
server.port=${PORT:8080}

# 데이터베이스 설정 (PostgreSQL - Render의 무료 DB 서비스)
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.datasource.driverClassName=org.postgresql.Driver

# JPA 설정 (Hibernate 사용)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# 로깅 설정
logging.level.root=INFO
logging.level.com.yhk.webchat=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO

# JWT 설정
# expiration : JWT 토큰의 만료 시간
# algorithm : 대칭키 알고리즘
jwt.secret=${JWT_SECRET:abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ}
jwt.expiration=86400000
jwt.algorithm=HS256

# Thymeleaf 설정
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true

# 파일 업로드 설정
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
file.upload.dir=/tmp/uploads

# 정적 리소스 설정
spring.mvc.static-path-pattern=/uploads/**
spring.web.resources.static-locations=file:/tmp/uploads/

# CORS 설정
spring.web.cors.allowed-origins=https://hyunki.github.io
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# 애플리케이션 설정
app.verification.host=${APP_URL:https://your-render-app-url.onrender.com}

# 소셜 로그인 리디렉션 URL 변경
spring.security.oauth2.client.registration.kakao.redirect-uri=https://hyunki.github.io/TDC/auth/kakao/callback
spring.security.oauth2.client.registration.google.redirect-uri=https://hyunki.github.io/TDC/auth/google/callback
spring.security.oauth2.client.registration.naver.redirect-uri=https://hyunki.github.io/TDC/auth/naver/callback 