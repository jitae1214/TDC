spring.application.name=chat-backend

# 서버 포트 설정
server.port=8080

# 데이터베이스 설정 (H2 인메모리)
# url : h2-console의 url 이름 설정
spring.datasource.url=jdbc:h2:mem:chatdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA 설정 (Hibernate 사용)
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# 매번 실행 될 때 기존 테이블을 삭제 하고 테이블을 새로 만듬
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# 이메일 설정 (Gmail로 설정 해놨음)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=dbsgusrl09@gmail.com
spring.mail.password=cjav mjzf jlbc mjye
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.connectiontimeout=5000

# 로깅 설정
logging.level.root=INFO
logging.level.com.yhk.webchat=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO

# JWT 설정
# expiration : JWT 토큰의 만료 시간
# algorithm : 대칭키 알고리즘
jwt.secret=abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
jwt.expiration=86400000
jwt.algorithm=HS256

# Thymeleaf 설정
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

# 파일 업로드 설정
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
file.upload.dir=${user.home}/uploads

# 정적 리소스 설정
spring.mvc.static-path-pattern=/uploads/**
spring.web.resources.static-locations=file:${user.home}/uploads/

# 기타 설정
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

# 애플리케이션 설정
app.verification.host=http://localhost:8080

# 소셜 로그인 설정
spring.security.oauth2.client.registration.kakao.client-id=7a8ccc15d52d94a934242f9807ffe8ff
spring.security.oauth2.client.registration.kakao.client-secret=bGW19RVLsirJ3pDsNRxMqJWuvtGkmAux
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:3000/auth/kakao/callback
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao

# 카카오 프로바이더 설정
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# 구글 로그인 설정
spring.security.oauth2.client.registration.google.client-id=237309085107-lt0gshfjsjf0rtcbu9en2jm7kgmtki72.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:3000/auth/google/callback
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.client-name=Google

# 구글 프로바이더 설정
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# 네이버 로그인 설정
spring.security.oauth2.client.registration.naver.client-id=Rn94OZwT7iZYAiUEtU1T
spring.security.oauth2.client.registration.naver.client-secret=Orpv6QQxN1
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:3000/auth/naver/callback
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

# 네이버 프로바이더 설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
